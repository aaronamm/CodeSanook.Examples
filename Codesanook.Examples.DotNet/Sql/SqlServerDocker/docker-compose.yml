version: "3.8"
services:
  db:
    build:
      context: .
      dockerfile: ${DOCKER_FILE}
    image: codesanook-examples-sql:latest
    container_name: codesanook-examples-mssql
    ports:
      - 1455:1433 # Default SQL Server port
    # https://docs.docker.com/compose/compose-file/#volumes
    volumes:
      # Named volume, Docker managed volume
      - mssql_data:/var/opt/mssql/data 
      - mssql_log:/var/opt/mssql/log
      - mssql_backup:/var/opt/mssql/backup

      # Bind with host volume https://docs.docker.com/storage/bind-mounts/
      # https://docs.docker.com/compose/compose-file/#variable-substitution
      - ${HOST_DIRECTORY}:/scripts
    # https://docs.docker.com/compose/compose-file/#environment
    environment:
      # https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-configure-environment-variables?view=sql-server-ver15#environment-variables
      - ACCEPT_EULA=Y
      - MSSQL_PID=Developer
      - MSSQL_SA_PASSWORD_FILE=/run/secrets/sa_password
      - MSSQL_DATA_DIR=/var/opt/mssql/data
      # https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-configure-mssql-conf?view=sql-server-ver15#dumpdir
      - MSSQL_LOG_DIR=/var/opt/mssql/log
      - MSSQL_BACKUP_DIR=/var/opt/mssql/backup
      # https://blog.dbi-services.com/managing-sql-server-sa-credentials-with-docker-secrets-on-swarm/
    # Usage of secret file for 'db' service
    secrets:
      - sa_password

# https://docs.docker.com/compose/compose-file/#external
volumes:
  mssql_data:
  mssql_log:
  mssql_backup:
# https://docs.docker.com/compose/compose-file/#env_file
# env_file:
#   - ./common.env
#   - ./secret.env

# Define a secret file at top level
# External secrets are not available to a container created by docker-compose.
secrets:
  sa_password:
    file: ./sa_password.secret

